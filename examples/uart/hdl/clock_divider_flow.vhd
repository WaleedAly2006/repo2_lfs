-- VHDL Entity UART.clock_divider.symbol
--
-- Created:
--          by - user.group (host.domain)
--          at - 11:55:15 04/12/2005
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2005.1
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY clock_divider IS
   PORT( 
      addr            : IN     std_logic;
      clk             : IN     std_logic;
      clk_div_en      : IN     std_logic;
      datin           : IN     std_logic_vector (7 DOWNTO 0);  -- data from cpu
      enable_rcv_clk  : IN     std_logic;
      enable_write    : IN     std_logic;
      enable_xmit_clk : IN     std_logic;
      rst             : IN     std_logic;
      div_data        : OUT    std_logic_vector (7 DOWNTO 0);
      sample          : OUT    std_logic
   );

-- Declarations

END clock_divider ;

--
-- VHDL Architecture UART.clock_divider.flow
--
-- Created:
--          by - user.group (host.domain)
--          at - 11:55:16 04/12/2005
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2005.1
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;
ARCHITECTURE flow OF clock_divider IS

   -- Architecture declarations
   SIGNAL divlsb, divmsb : std_logic_vector(7 downto 0);
   SIGNAL div_msb_lsb, clk_cnt : std_logic_vector(15 downto 0);

BEGIN

   -----------------------------------------------------------------
   clk_div_proc : PROCESS (clk, rst)
   -----------------------------------------------------------------
   BEGIN
      -- Asynchronous Reset
      IF (rst = '0') THEN
         -- Reset Actions
         divlsb <= (others => '0');
         divmsb <= (others => '0');
         clk_cnt <= (0 => '1', others => '0');

      ELSIF (clk'EVENT AND clk = '1') THEN
         -- Setup clock divisor values
         IF clk_div_en = '1'  AND enable_write = '1' THEN
            IF addr = '0' THEN
               divlsb <= datin;
            ELSE
               divmsb <= datin;
            END IF;
         END IF;
         -- Generate divided clock
         IF enable_xmit_clk = '1' OR enable_rcv_clk = '1' THEN
            IF clk_cnt >= unsigned(div_msb_lsb) - 1 THEN
               clk_cnt <= (others => '0');
            ELSE
               clk_cnt <= unsigned(clk_cnt) + 1;
            END IF;
         ELSE
            clk_cnt <= (0=>'1', others=>'0');
         END IF;
      END IF;
   END PROCESS clk_div_proc;


-- Architecture concurrent statements
div_data <= divlsb WHEN addr = '0' ELSE
                   divmsb;
div_msb_lsb <= (divmsb & divlsb);
sample <= '1' WHEN clk_cnt >= '0' & div_msb_lsb(15 downto 1) ELSE
                 '0';

END flow;
