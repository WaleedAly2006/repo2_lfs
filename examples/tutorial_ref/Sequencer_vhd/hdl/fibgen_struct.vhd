-- VHDL Entity Sequencer_vhd.fibgen.symbol
--
-- Created:
--          by - user.group (host.domain)
--          at - 10:55:50 04/12/2005
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2005.1
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY fibgen IS
   PORT( 
      clock  : IN     std_logic;
      reset  : IN     std_logic;
      fibout : OUT    std_logic_vector (7 DOWNTO 0)
   );

-- Declarations

END fibgen ;

--
-- VHDL Architecture Sequencer_vhd.fibgen.struct
--
-- Created:
--          by - user.group (host.domain)
--          at - 10:55:50 04/12/2005
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2005.1
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

-- pragma synthesis_off
LIBRARY Sequencer_vhd;
-- pragma synthesis_on

ARCHITECTURE struct OF fibgen IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL A      : std_logic_vector(7 DOWNTO 0);
   SIGNAL B      : std_logic_vector(7 DOWNTO 0);
   SIGNAL clr    : std_logic;
   SIGNAL gnd    : std_logic;
   SIGNAL inc    : std_logic;
   SIGNAL ld_A_B : std_logic;
   SIGNAL ld_sum : std_logic;
   SIGNAL sum    : std_logic_vector(7 DOWNTO 0);

   -- Implicit buffer signal declarations
   SIGNAL fibout_internal : std_logic_vector (7 DOWNTO 0);


   -- Component Declarations
   COMPONENT accumulator
   PORT (
      clock : IN     std_logic ;
      clr   : IN     std_logic ;
      inc   : IN     std_logic ;
      ip    : IN     std_logic_vector (7 DOWNTO 0);
      ld    : IN     std_logic ;
      op    : BUFFER std_logic_vector (7 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT control
   PORT (
      clock  : IN     std_logic ;
      reset  : IN     std_logic ;
      clr    : OUT    std_logic ;
      inc    : OUT    std_logic ;
      ld_A_B : OUT    std_logic ;
      ld_sum : OUT    std_logic 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : accumulator USE ENTITY Sequencer_vhd.accumulator;
   FOR ALL : control USE ENTITY Sequencer_vhd.control;
   -- pragma synthesis_on


BEGIN
   -- Architecture concurrent statements
   -- HDL Embedded Text Block 1 adder
   sum<=unsigned(A)+unsigned(B);

   -- HDL Embedded Text Block 2 ground
   gnd <= '0' ;


   -- Instance port mappings.
   acc_A : accumulator
      PORT MAP (
         clock => clock,
         clr   => clr,
         inc   => gnd,
         ip    => fibout_internal,
         ld    => ld_A_B,
         op    => A
      );
   acc_B : accumulator
      PORT MAP (
         clock => clock,
         clr   => clr,
         inc   => inc,
         ip    => A,
         ld    => ld_A_B,
         op    => B
      );
   acc_sum : accumulator
      PORT MAP (
         clock => clock,
         clr   => clr,
         inc   => gnd,
         ip    => sum,
         ld    => ld_sum,
         op    => fibout_internal
      );
   FSM : control
      PORT MAP (
         clock  => clock,
         reset  => reset,
         clr    => clr,
         inc    => inc,
         ld_A_B => ld_A_B,
         ld_sum => ld_sum
      );

   -- Implicit buffered output assignments
   fibout <= fibout_internal;

END struct;
