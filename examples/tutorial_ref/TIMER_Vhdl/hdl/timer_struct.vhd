-- VHDL Entity TIMER_Vhdl.Timer.symbol
--
-- Created:
--          by - user.group (host.domain)
--          at - 11:40:33 04/12/2005
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2005.1
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY Timer IS
   PORT( 
      clk   : IN     std_logic;
      d     : IN     std_logic_vector (9 DOWNTO 0);
      reset : IN     std_logic;
      start : IN     std_logic;
      stop  : IN     std_logic;
      alarm : OUT    std_logic;
      high  : OUT    std_logic_vector (3 DOWNTO 0);
      low   : OUT    std_logic_vector (3 DOWNTO 0)
   );

-- Declarations

END Timer ;

--
-- VHDL Architecture TIMER_Vhdl.Timer.struct
--
-- Created:
--          by - user.group (host.domain)
--          at - 11:40:34 04/12/2005
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2005.1
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

-- pragma synthesis_off
LIBRARY TIMER_Vhdl;
-- pragma synthesis_on

ARCHITECTURE struct OF Timer IS

   -- Architecture declarations
      -- Non hierarchical truthtable declarations
    


   -- Internal signal declarations
   SIGNAL beep   : std_logic;
   SIGNAL clear  : std_logic;
   SIGNAL dat_in : std_logic_vector(3 DOWNTO 0);
   SIGNAL hold   : std_logic;
   SIGNAL load   : std_logic;
   SIGNAL zero   : std_logic;


   -- Component Declarations
   COMPONENT Control
   PORT (
      clk   : IN     std_logic ;
      d     : IN     std_logic_vector (9 DOWNTO 0);
      reset : IN     std_logic ;
      start : IN     std_logic ;
      stop  : IN     std_logic ;
      zero  : IN     std_logic ;
      beep  : OUT    std_logic ;
      clear : OUT    std_logic ;
      hold  : OUT    std_logic ;
      load  : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT Counter
   PORT (
      clear  : IN     std_logic ;
      clk    : IN     std_logic ;
      dat_in : IN     std_logic_vector (3 DOWNTO 0);
      hold   : IN     std_logic ;
      load   : IN     std_logic ;
      high   : OUT    std_logic_vector (3 DOWNTO 0);
      low    : OUT    std_logic_vector (3 DOWNTO 0);
      zero   : OUT    std_logic 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : Control USE ENTITY TIMER_Vhdl.Control;
   FOR ALL : Counter USE ENTITY TIMER_Vhdl.Counter;
   -- pragma synthesis_on


BEGIN
   -- Architecture concurrent statements
   -- HDL Embedded Block 1 DtoB
   -- Non hierarchical truthtable
   -----------------------------------------------------------------
   dtob_truth_process_proc: PROCESS(d)
   -----------------------------------------------------------------
   BEGIN
      -- Block 1
      IF (d(0) = '1') THEN
         dat_in <= "0000";
      ELSIF (d(1) = '1') THEN
         dat_in <= "0001";
      ELSIF (d(2) = '1') THEN
         dat_in <= "0010";
      ELSIF (d(3) = '1') THEN
         dat_in <= "0011";
      ELSIF (d(4) = '1') THEN
         dat_in <= "0100";
      ELSIF (d(5) = '1') THEN
         dat_in <= "0101";
      ELSIF (d(6) = '1') THEN
         dat_in <= "0110";
      ELSIF (d(7) = '1') THEN
         dat_in <= "0111";
      ELSIF (d(8) = '1') THEN
         dat_in <= "1000";
      ELSIF (d(9) = '1') THEN
         dat_in <= "1001";
      ELSE
         dat_in <= "0000";
      END IF;

   END PROCESS dtob_truth_process_proc;

   -- Architecture concurrent statements
    


   -- HDL Embedded Text Block 2 OR1
   -- OR1  2
   alarm <= hold OR beep;


   -- Instance port mappings.
   I0 : Control
      PORT MAP (
         clk   => clk,
         d     => d,
         reset => reset,
         start => start,
         stop  => stop,
         zero  => zero,
         beep  => beep,
         clear => clear,
         hold  => hold,
         load  => load
      );
   I1 : Counter
      PORT MAP (
         clear  => clear,
         clk    => clk,
         dat_in => dat_in,
         hold   => hold,
         load   => load,
         high   => high,
         low    => low,
         zero   => zero
      );

END struct;
